{"version":3,"sources":["utils/request.js","services/api.js","models/testTwo.js"],"names":["codeMessage","200","201","202","204","400","401","403","404","406","410","422","500","502","503","504","402","601","checkStatus","response","status","errortext","statusText","error","message","description","request","url","options","Object","assign","newOptions","credentials","method","body","FormData","headers","Accept","JSON","stringify","params","fetch","then","json","success","parseInt","code","errorCode","data","token","window","loginStatus","dispatch","store","routerRedux","push","pathname","catch","e","name","type","getManageSortList","a","console","log","namespace","state","effects","getlist","payload","callback","call","put","select","reducers","save"],"mappings":"+NAIMA,EAAc,CAClBC,IAAK,iFACLC,IAAK,+DACLC,IAAK,qHACLC,IAAK,6CACLC,IAAK,uFACLC,IAAK,2HACLC,IAAK,yGACLC,IAAK,+JACLC,IAAK,yDACLC,IAAK,qHACLC,IAAK,+GACLC,IAAK,6FACLC,IAAK,qEACLC,IAAK,2EACLC,IAAK,qHACLC,IAAK,mJACLC,IAAK,oDAGP,SAASC,EAAYC,GACnB,GAAIA,EAASC,QAAU,KAAOD,EAASC,OAAS,IAC9C,OAAOD,EAGT,IAAME,EAAYrB,EAAYmB,EAASC,SAAWD,EAASG,WAK3D,OAJA,IAAaC,MAAM,CACjBC,QAAQ,2BACRC,YAAaJ,IAERF,EAUM,SAASO,EAAQC,EAAKC,GAChBC,OAAOC,OAAO,GAAIF,GAArC,IAYMG,EAAU,eATO,CACrBC,YAAa,WAQC,GAA2BJ,GAsB3C,MApBwB,SAAtBG,EAAWE,QACW,QAAtBF,EAAWE,QACW,WAAtBF,EAAWE,SAELF,EAAWG,gBAAgBC,SAS/BJ,EAAWK,QAAX,aACEC,OAAQ,oBACLN,EAAWK,UAVhBL,EAAWK,QAAX,aACEC,OAAQ,mBACR,eAAgB,mCACbN,EAAWK,SAEhBL,EAAWG,KAAOI,KAAKC,UAAUR,EAAWG,KAAKM,UAU9CC,IAAMd,EAAKI,GACfW,KAAKxB,GACLwB,MAAK,SAAAvB,GACJ,OAAsB,KAAnBA,EAASC,OACHD,EAASwB,OAIT,CACLC,SAAS,MAKdF,MAAK,SAAAvB,GACJ,GAA8B,KAA3B0B,SAAS1B,EAAS2B,OAAgD,KAAhCD,SAAS1B,EAAS4B,WAIrD,OAHG5B,EAAS6B,MAAQ7B,EAAS6B,KAAKC,QAChCC,OAAOC,aAAc,GAEhBhC,EACF,GAA8B,KAA3B0B,SAAS1B,EAAS2B,MAAa,KAE/BM,EAAaC,UAAbD,SACR,OAAGF,OAAOC,cACVD,OAAOC,aAAc,EACrBC,EAASE,cAAYC,KAAK,CACxBC,SAAU,kBAHkBrC,EAU9B,IAAM2B,EAAOD,SAASC,GAOtB,OANI9C,EAAY8C,IACd,IAAavB,MAAM,CACjBC,QAAS,2BACTC,YAAazB,EAAY8C,KAGtB3B,KAGVsC,OAAM,SAAAC,GAAM,IACHN,EAAaC,UAAbD,SAEO,MADAM,EAAEC,MAEfP,EAAS,CACPQ,KAAM,oBC3HT,SAAeC,EAAtB,kC,4CAAO,WAAiCrB,GAAjC,SAAAsB,EAAA,6DACHC,QAAQC,IAAI,sBADT,kBAEItC,EAAQ,YAAD,OAAaa,oBAAUC,MAFlC,4C,sBCAQ,WACXyB,UAAW,UACXC,MAAO,CACHlB,KAAM,iBACNW,KAAM,UAEVQ,QAAS,CACJC,QADI,qGAIgB,OAHVC,EADN,EACMA,QADN,EACeC,SAAcC,EAD7B,EAC6BA,KAD7B,EACmCC,IADnC,EACwCC,OADxC,SAIsBF,EAAKV,EAAmBQ,GAJ9C,OAIKlD,EAJL,OAMD4C,QAAQC,IAAI7C,GANX,2CAUTuD,SAAU,CACNC,KADM,SACDT,EAAMG,GACP,sBACOH,EADP,GAEOG,EAAQA","file":"static/js/18.ef9c5a90.chunk.js","sourcesContent":["import fetch from 'dva/fetch';\r\nimport { notification, message } from 'antd';\r\nimport { routerRedux } from 'dva/router';\r\nimport store from '../index';\r\nconst codeMessage = {\r\n  200: '服务器成功返回请求的数据。',\r\n  201: '新建或修改数据成功。',\r\n  202: '一个请求已经进入后台排队（异步任务）。',\r\n  204: '删除数据成功。',\r\n  400: '需使用锁屏浏览器打开当前应用',\r\n  401: '用户没有权限（令牌、用户名、密码错误）。',\r\n  403: '用户得到授权，但是访问是被禁止的。',\r\n  404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\r\n  406: '请求的格式不可得。',\r\n  410: '请求的资源被永久删除，且不会再得到的。',\r\n  422: '当创建一个对象时，发生一个验证错误。',\r\n  500: '服务器发生错误，请检查服务器。',\r\n  502: '网关错误，请尝试刷新。',\r\n  503: '服务不可用，请稍后再试。',\r\n  504: '网关超时，请联系网站管理员或稍后再试。',\r\n  402: '请求删除的资源被其他资源使用，无法执行删除操作。',\r\n  601: \"剩余短信条数不足\"\r\n};\r\n\r\nfunction checkStatus(response) {\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return response;\r\n  }\r\n\r\n  const errortext = codeMessage[response.status] || response.statusText;\r\n  notification.error({\r\n    message: `请求异常`,\r\n    description: errortext,\r\n  });\r\n  return response;\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise.\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n * @return {object}           An object containing either \"data\" or \"err\"\r\n */\r\nexport default function request(url, options) {\r\n  const oriOptions = Object.assign({}, options);\r\n\r\n  \r\n  const defaultOptions = {\r\n    credentials: 'include',\r\n    // headers: {\r\n    //   'token': enableToken,\r\n    //   'from': 'aroom',\r\n    //   'resolution': window.screen.width + '*' +window.screen.height,\r\n    \r\n    // }\r\n  };\r\n  const newOptions = { ...defaultOptions, ...options };\r\n  if (\r\n    newOptions.method === 'POST' ||\r\n    newOptions.method === 'PUT' ||\r\n    newOptions.method === 'DELETE'\r\n  ) {\r\n    if (!(newOptions.body instanceof FormData)) {\r\n      newOptions.headers = {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n        ...newOptions.headers,\r\n      };\r\n      newOptions.body = JSON.stringify(newOptions.body.params);\r\n    } else {\r\n      // newOptions.body is FormData\r\n      newOptions.headers = {\r\n        Accept: 'application/json',\r\n        ...newOptions.headers,\r\n      };\r\n    }\r\n  }\r\n\r\n  return fetch(url, newOptions)\r\n    .then(checkStatus)\r\n    .then(response => {\r\n      if(response.status == 200) { // 截断接口报错\r\n        return response.json();\r\n      } else {\r\n\r\n    \r\n        return {\r\n          success: false\r\n        }\r\n\r\n      }\r\n    })\r\n    .then(response => {\r\n      if(parseInt(response.code) == 200 || parseInt(response.errorCode) == 200){\r\n        if(response.data && response.data.token) {\r\n          window.loginStatus = false\r\n        }\r\n        return response\r\n      } else if(parseInt(response.code) == 401){\r\n        // message.error('登录失效')\r\n        const { dispatch } = store;\r\n        if(window.loginStatus) return response\r\n        window.loginStatus = true\r\n        dispatch(routerRedux.push({\r\n          pathname: '/user/login',\r\n          // search: stringify({\r\n          //   redirect: window.location.href,\r\n          // }),\r\n        }));\r\n        return response\r\n      } else {\r\n        const code = parseInt(code)\r\n        if (codeMessage[code]){\r\n          notification.error({\r\n            message: '请求错误',\r\n            description: codeMessage[code],\r\n          });\r\n        }\r\n        return response\r\n      }\r\n    })\r\n    .catch(e => {\r\n      const { dispatch } = store;\r\n      const status = e.name;\r\n      if (status === 401) {\r\n        dispatch({\r\n          type: 'login/logout',\r\n        });\r\n        return;\r\n      }\r\n\r\n    });\r\n}\r\n","// 获取平台列表和网校列表  /service/platform/platformAndSchool\r\nimport { stringify } from 'qs';\r\nimport request from '../utils/request';\r\n\r\nexport async function getManageSortList(params) {\r\n    console.log('猪猪猪')\r\n    return request(`/getTest?${stringify(params)}`);\r\n}\r\n","\r\nimport {getManageSortList } from '../services/api';\r\n\r\n\r\nexport default {\r\n    namespace: \"testTwo\",\r\n    state: {\r\n        data: '兰兰hu',\r\n        name: 'fenfen'\r\n    },\r\n    effects: {\r\n        *getlist({ payload, callback }, { call, put, select }) {\r\n\r\n            // 当关闭模态框  手动进行页面的刷新\r\n            const response = yield call(getManageSortList, payload);\r\n\r\n            console.log(response);\r\n        },\r\n\r\n    },\r\n    reducers: {\r\n        save(state,payload){\r\n            return{\r\n                ...state,\r\n                ...payload.payload\r\n            }\r\n        }\r\n    },\r\n} "],"sourceRoot":""}